# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  - group: maven-publish-variables
  - name: isMaster
    value: $[eq(variables['Build.SourceBranchName'], 'master')]

steps:
- task: Gradle@2
  displayName: Build
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

- task: DownloadSecureFile@1
  name: secretKeys
  displayName: Download secret-keys.gpg
  inputs:
    secureFile: 'secret-keys.gpg'

- task: Gradle@2
  condition: and(succeeded(), eq(variables.isMaster, 'True'))
  displayName: Publish
  inputs:
    gradleWrapperFile: 'gradlew'
    options: > 
      -PossrhUsername=$(ossrhUsername) 
      -PossrhPassword=$(ossrhPassword) 
      -Psigning.keyId=$(signing.keyId) 
      -Psigning.password=$(signing.password) 
      -Psigning.secretKeyRingFile=$(secretKeys.secureFilePath)
    tasks: 'publish'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
